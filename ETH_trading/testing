import plotly.graph_objects as go
import plotly.io as pio
from plotly.subplots import make_subplots
# Import my own libraries:
import indicators as ind
from data_processing import *

# To render interactive plots from plotly in your browser:
pio.renderers.default = "browser"

""" Constants """
time_frame = '15m'
exchange = 'Binance'  # later can be input to load_data as well
pair = 'ETHUSDT'

""" Loading data """
# Load old data and add possible new data to it:
filename, candles = load_data(exchange, pair, time_frame)
# Save all the data (candles only for now):
save_data(filename, candles)

""" Processing, draw indicators """
EMA13 = ind.ExponentialMovingAverage(window_length=13, time_frame=time_frame)
EMA13.batch_fit(candles)

# ATR Channels:
ATRChannels26 = ind.ATRChannels(window_length=26, time_frame=time_frame)
ATRChannels26.batch_fit(candles)

# Stochastic RSI:

# Bollinger band:


#RSI = ind.RSI()
#RSI.batch_fit(candles)

""" Making plots using Plotly """
# TODO: Plot BB, Stochastic RSI

fig = make_subplots(rows=3, cols=1, shared_xaxes=True)
fig.add_trace(go.Candlestick(x=candles.index,
                             open=candles['open'],
                             high=candles['high'],
                             low=candles['low'],
                             close=candles['close'],
                             showlegend=False),
              row=1, col=1)

EMA13.plot(fig)
ATRChannels26.plot(fig)

# fig.add_trace(go.Line(), row=2, col=1)  # S SRI
# fig.add_trace(go.Scatter(mode='lines'), row=2, col=1)  # Extra indicator

fig.update_layout(title_text='{} chart of {} on {}'.format(time_frame, pair, exchange))
fig.show()




